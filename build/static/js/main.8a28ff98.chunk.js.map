{"version":3,"sources":["styles/GlobalStyles.js","components/LeftBar/styles.js","components/Button/index.js","contexts/AuthContext.js","components/LeftBar/index.js","components/ProfilePage/styles.js","components/Layout/styles.js","components/WoofByUser/styles.js","utils/like.js","utils/unlike.js","components/WoofByUser/index.js","components/ProfilePage/index.js","components/ProfilePage/follow.js","components/ProfilePage/unfollow.js","components/Feed/styles.js","components/Woof/styles.js","components/Woof/index.js","components/Feed/index.js","components/Post/styles.js","components/Post/index.js","components/Post/send.js","components/Main/styles.js","components/Main/index.js","components/Layout/index.js","components/FollowingLayout/styles.js","components/FollowingWoof/styles.js","components/FollowingWoof/index.js","components/FollowingLayout/index.js","components/LoginPage/styles.js","components/LoginPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","Container","styled","div","Top","MenuButton","button","iconCSS","css","HomeIcon","Home","LoginIcon","LogIn","LogoutIcon","LogOut","ProfileIcon","Person","StyledLink","DoorOpen","Link","FollowingUserIcon","UserFollow","Button","props","outlined","AuthContext","createContext","AuthProvider","children","useState","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","jwt_decode","user","setUser","loading","navigate","useNavigate","loginUser","event","a","preventDefault","console","log","fetch","method","headers","body","stringify","username","target","value","password","response","json","data","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","useEffect","interval","setInterval","clearInterval","contextData","Provider","LeftBar","useContext","to","onClick","id","Cont","Banner","Avatar","ProfileData","FollowData","Tab","Tweets","LocationIcon","LocationOn","CalendarIcon","CalendarToday","EditButton","Wrapper","Body","Content","Header","Dot","Text","p","Paginator","Icons","Status","LikeIcon","Favorite","EditCSS","EditIcon","EditOutline","like","postId","token","document","getElementById","innerText","split","Accept","Authorization","text","likes","then","catch","error","parseJWT","atob","e","Woof","url","window","location","href","substring","lastIndexOf","user_id","logged_user","undefined","random","setRandom","posts","setPosts","page","setPage","previous","setPrevious","next","setNext","edit","post","parentNode","paragraph","querySelector","innerHTML","parent","createElement","classList","add","appendChild","style","backgroundColor","color","borderRadius","padding","float","cursor","fontSize","fontWeight","textAlign","width","margin","addEventListener","display","parentElement","getElementsByTagName","Math","UpdateTweet","results","prev","handlePreviousPage","map","first_name","last_name","created_at","updated_at","includes","unlike","handleLike","fill","length","ProfilePage","request","followee","setFollowee","follower","followerId","followers","userToFollow","follow","setTimeout","userToUnfollow","unfollow","date_joined","following","WoofByUser","index","Feed","className","name","placeholder","Post","date","Date","isoDateString","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toISOString","woof","reload","send","ArrowLeft","Main","Layout","Container1","Container2","Container3","FollowingWoof","FollowingLayout","LoginPage","onSubmit","type","App","element","path","GlobalStyles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a28ff98.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n\r\n* {\r\n  margin:0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n\r\n  color: var(--white);\r\n}\r\n\r\nhtml, body, #root {\r\n  max-height: 100vh;\r\n  max-width: 100vw;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n*, button, input {\r\n  border: 0;\r\n  background: none;\r\n  font-family: -apple-system, system-ui, sans-serif;\r\n}\r\n\r\nhtml {\r\n  background: var(--primary);\r\n}\r\n:root {\r\n  --primary: #000;\r\n  --secondary: #202327;\r\n  --white: #D9D9D9;\r\n  --gray: #7A7A7A;\r\n  --outline: #2F3336;\r\n  --retweet: #00C068;\r\n  --like: #E8265E;\r\n  --twitter: #33A1F2;\r\n  --twitter-dark-hover: #011017;\r\n  --twitter-light-hover: #2C8ED6;\r\n}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Home, Person } from \"../../styles/icons\";\r\n\r\nimport { DoorOpen } from \"@styled-icons/fa-solid/DoorOpen\";\r\n\r\nimport { LogIn, LogOut } from \"@styled-icons/boxicons-regular\";\r\n\r\nimport { UserFollow } from \"@styled-icons/remix-fill/UserFollow\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  padding: 10px 20px 20px;\r\n\r\n  max-height: 100vh;\r\n`;\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\nexport const MenuButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n\r\n  > span,\r\n  a {\r\n    display: inline;\r\n    margin-left: 20 px;\r\n\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n  }\r\n\r\n  padding-right: 12px;\r\n\r\n  padding: 8px 0;\r\n  outline: 0;\r\n\r\n  & + button:last-child {\r\n    margin-top: 25px;\r\n\r\n    width: 100%;\r\n    height: unset;\r\n    > span {\r\n      display: inline;\r\n    }\r\n  }\r\n  cursor: pointer;\r\n  border-radius: 25px;\r\n\r\n  &:hover {\r\n    background: var(--twitter-dark-hover);\r\n  }\r\n\r\n  &:hover,\r\n  &:active {\r\n    span,\r\n    svg {\r\n      color: var(--twitter);\r\n      fill: var(--twitter);\r\n    }\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  flex-shrink: 0;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const HomeIcon = styled(Home)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const LoginIcon = styled(LogIn)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const LogoutIcon = styled(LogOut)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const ProfileIcon = styled(Person)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const DoorIcon = styled(DoorOpen)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const FollowingUserIcon = styled(UserFollow)`\r\n  ${iconCSS}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n// Check if button will be filled or outlined\r\n// interface Props {\r\n//   outlined?: boolean;\r\n// }\r\n\r\nconst Button = styled.button`\r\n  /* If button is outlined, background will be transparent, else Twitter color */\r\n  background: ${(props) =>\r\n    props.outlined === \"True\"\r\n      ? \"transparent\"\r\n      : props.outlined === \"False\"\r\n      ? \"var(--twitter)\"\r\n      : \"none\"};\r\n\r\n  color: ${(props) =>\r\n    props.outlined === \"True\"\r\n      ? \"var(--twitter)\"\r\n      : props.outlined === \"False\"\r\n      ? \"var(--white)\"\r\n      : \"none\"};\r\n\r\n  border: ${(props) =>\r\n    props.outlined === \"True\"\r\n      ? \"1px solid var(--twitter)\"\r\n      : props.outlined === \"False\"\r\n      ? \"none\"\r\n      : \"none\"};\r\n\r\n  padding: 16px;\r\n  border-radius: 25px;\r\n\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n\r\n  cursor: pointer;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n    background: ${(props) =>\r\n      props.outlined\r\n        ? \"var(--twitter-dark-hover)\"\r\n        : \"var(twitter-light-hover)\"};\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import { createContext, useState, useEffect } from \"react\";\r\n\r\nimport React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\nexport default AuthContext;\r\n\r\n// Import Headers object\r\n\r\n// Log in a user\r\nexport const AuthProvider = ({ children }) => {\r\n  let [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  let loginUser = async (event) => {\r\n    // Prevent page from reloading\r\n    event.preventDefault();\r\n    console.log(\"Form submitted\");\r\n\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        //Get information from form names\r\n        username: event.target.username.value,\r\n        password: event.target.password.value,\r\n      }),\r\n    });\r\n    let data = await response.json();\r\n    console.log(\"data:\", data);\r\n    console.log(\"response:\", response);\r\n    if (response.status === 200) {\r\n      // alert(\"success\");\r\n      // Access and Refresh Tokens\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n\r\n      // Get access information from localStorage.authTokens\r\n      let access = JSON.parse(localStorage.getItem(\"authTokens\")).access;\r\n      localStorage.setItem(\"Bearer\", access);\r\n\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  let logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    localStorage.removeItem(\"Bearer\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  let updateToken = async () => {\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        //Get information from form names\r\n        refresh: authTokens.refresh,\r\n      }),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n\r\n      // Get access information from localStorage.authTokens\r\n      let access = JSON.parse(localStorage.getItem(\"authTokens\")).access;\r\n      localStorage.setItem(\"Bearer\", access);\r\n    } else {\r\n      logoutUser();\r\n    }\r\n  };\r\n\r\n  // Make log persistent for user\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      if (authTokens) {\r\n        updateToken();\r\n      }\r\n    }, 1800000000);\r\n    return () => clearInterval(interval);\r\n  }, [authTokens, loading]);\r\n\r\n  let contextData = {\r\n    user: user,\r\n    loginUser: loginUser,\r\n    logoutUser: logoutUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { HomeIcon, ProfileIcon, DoorIcon } from \"./styles\";\r\n\r\nimport { Container, Top, MenuButton } from \"./styles\";\r\n\r\nimport { StyledLink } from \"./styles\";\r\n\r\nimport { FollowingUserIcon } from \"./styles\";\r\n\r\nimport { LoginIcon, LogoutIcon } from \"./styles\";\r\n\r\nimport Button from \"../Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nconst LeftBar: React.FC = () => {\r\n  let { user, logoutUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Top>\r\n        {/* <Logo/> */}\r\n        <MenuButton>\r\n          <StyledLink to=\"/\">\r\n            <HomeIcon />\r\n            <span>Homepage</span>\r\n          </StyledLink>\r\n        </MenuButton>\r\n\r\n        {user ? (\r\n          <MenuButton>\r\n            <StyledLink to={`/${user.username}`}>\r\n              <ProfileIcon />\r\n              <span>Profile</span>\r\n            </StyledLink>\r\n          </MenuButton>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {user ? (\r\n          <MenuButton>\r\n            <StyledLink to=\"/following\">\r\n              <FollowingUserIcon />\r\n              <span>Following</span>\r\n            </StyledLink>\r\n          </MenuButton>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {user ? (\r\n          <MenuButton>\r\n            <StyledLink to=\"/\" onClick={logoutUser}>\r\n              <LogoutIcon />\r\n              <span> Logout</span>\r\n            </StyledLink>\r\n          </MenuButton>\r\n        ) : (\r\n          <MenuButton>\r\n            <StyledLink to=\"/login\">\r\n              <LoginIcon />\r\n              <span> Login</span>\r\n            </StyledLink>\r\n          </MenuButton>\r\n        )}\r\n\r\n        {user ? <p id=\"username\">@{user.username}</p> : \"\"}\r\n\r\n        {/* {user ? <p>Logout</p> : <Link to=\"/login\">Login</Link>} */}\r\n        <Button outlined=\"False\">\r\n          <span>Woof</span>\r\n        </Button>\r\n      </Top>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LeftBar;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { LocationOn, CalendarToday } from \"../../styles/icons\";\r\nimport Button from \"../Button\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  max-height: 100%;\r\n  /* Scrolls if it's big */\r\n  overflow-y: auto;\r\n\r\n  /* firefox */\r\n  scrollbar-width: none;\r\n  /* chrome */\r\n  :: -webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Cont = styled.div`\r\n  display: flex; //  Main container\r\n  flex-direction: column;\r\n\r\n  width: min(600px, 100%); // Won't get larger than 601px\r\n\r\n  border-left: 1px solid var(--outline);\r\n  border-right: 1px solid var(--outline);\r\n`;\r\n\r\nexport const Banner = styled.div`\r\n  /* Won't literally shrink if page \"moves\" */\r\n  flex-shrink: 0;\r\n\r\n  width: 100%;\r\n  height: min(33vh, 200px);\r\n\r\n  background: var(--twitter);\r\n  position: relative;\r\n`;\r\nexport const Avatar = styled.div`\r\n  /* Size is between a minimum of 45px and a max of (min of 135px and max of 22% of VW) */\r\n  /* Create a circle */\r\n  width: max(45px, min(135px, 22vw));\r\n  height: max(45px, min(135px, 22vw));\r\n\r\n  /* Paint circle in gray with primary color */\r\n  border: 2px solid var(--primary);\r\n  border-radius: 50%;\r\n  background: var(--gray);\r\n\r\n  position: absolute; // only works with position:relative activated\r\n  /* Move circle down */\r\n  bottom: max(-65px, -10vw);\r\n  left: 15px;\r\n`;\r\nexport const ProfileData = styled.div`\r\n  /* Profile data padding, so info won't truncate with avatar, nor background */\r\n  padding: min(calc(10vw + 7px), 67px) 16px 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  position: relative;\r\n\r\n  > h1 {\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n\r\n  > h2 {\r\n    font-weight: normal;\r\n    font-size: 15px;\r\n\r\n    color: var(--gray);\r\n  }\r\n\r\n  > p {\r\n    font-size: 15px;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  > ul {\r\n    list-style: none;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n\r\n    > li {\r\n      font-size: 15px;\r\n      color: (--gray);\r\n\r\n      > svg {\r\n        fill: var(--gray);\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const FollowData = styled.div`\r\n  display: flex;\r\n  padding-left: 16px;\r\n  > span {\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const Tab = styled.div`\r\n  margin-top: 10px;\r\n  padding: 11px 0 15px;\r\n\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n\r\n  outline: 0;\r\n  cursor: pointer;\r\n\r\n  color: var(--twitter);\r\n  border-top: 1px solid var(--outline);\r\n  border-bottom: 1px solid var(--twitter);\r\n\r\n  &: hover {\r\n    background-color: var(--twitter-dark-hover);\r\n  }\r\n`;\r\n\r\nexport const Tweets = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--gray);\r\n`;\r\n\r\nexport const LocationIcon = styled(LocationOn)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const CalendarIcon = styled(CalendarToday)`\r\n  ${iconCSS}\r\n`;\r\n\r\nexport const EditButton = styled(Button)`\r\n  position: absolute;\r\n  top: 2vw;\r\n  right: 8px;\r\n\r\n  padding: 6px 16px;\r\n  font-size: 14px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background: var(--primary);\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n\r\n  display: flex; // 1 | 2 | 3 Layout\r\n  justify-content: center; // Everything on center\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Favorite, EditOutline } from \"../../styles/icons\";\r\n\r\nexport const Tweet = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 14px 16px;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  max-width: 100%;\r\n`;\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n\r\n  position: relative;\r\n`;\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  border-radius: 50px;\r\n  flex-shrink: 0;\r\n  background-color: var(--gray);\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  margin-top: 2px;\r\n  padding-left: 60px;\r\n`;\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 15px;\r\n  // Text won't break\r\n  white-space: nowrap;\r\n\r\n  > strong {\r\n    margin-right: 5px;\r\n  }\r\n  > span,\r\n  time {\r\n    color: var(--gray);\r\n  }\r\n  > span > a {\r\n    text-decoration: none;\r\n    color: var(--gray);\r\n    &:hover {\r\n      color: var(--white);\r\n    }\r\n  }\r\n  > strong,\r\n  span {\r\n    // Text won't break\r\n    white-space: nowrap;\r\n    // Three dots when pushing text\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  background: var(--gray);\r\n  width: 2px;\r\n  height: 2px;\r\n  border-radius: 50%;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Paginator = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  > button {\r\n    color: var(--gray);\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n  }\r\n  > button.active {\r\n    background-color: var(--twitter);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n  }\r\n  > button:hover:not(.active) {\r\n    color: var(--twitter);\r\n    background-color: var(--twitter-dark-hover);\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  flex-wrap: wrap;\r\n  margin: 10px auto 0;\r\n  width: 100%;\r\n\r\n  > div {\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\nexport const Status = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 14px;\r\n\r\n  > svg {\r\n    margin-right: 4px;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    color: var(--like);\r\n\r\n    > svg {\r\n      fill: var(--like);\r\n    }\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 18px;\r\n  height: 18px;\r\n`;\r\n\r\nexport const LikeIcon = styled(Favorite)`\r\n  ${iconCSS}\r\n`;\r\n// Create a link element called \"edit\"\r\n// Element will be placed on top right side\r\nexport const EditCSS = css`\r\n  width: 24px;\r\n  height: 24px;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  &:hover {\r\n    fill: var(--twitter);\r\n    &: (.active) {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EditIcon = styled(EditOutline)`\r\n  ${EditCSS}\r\n`;\r\n","import React from \"react\";\r\n\r\nexport default function like(postId) {\r\n  // Token needed for authentication\r\n  var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n\r\n  // Username of who is going to do the like action\r\n  var username = document.getElementById(\"username\").innerText.split(\"@\", 2)[1];\r\n\r\n  fetch(`http://localhost:8000/api/wooflike/${postId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token.access}`,\r\n    },\r\n    body: JSON.stringify({\r\n      text: \".\",\r\n      likes: [],\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(\"Success:\", data);\r\n    })\r\n    .catch((error) => {\r\n      // console.error(\"Error:\", error);\r\n    });\r\n  // window.location.reload(true);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function like(postId) {\r\n  // Token needed for authentication\r\n  var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n\r\n  // Username of who is going to do the like action\r\n  var username = document.getElementById(\"username\").innerText.split(\"@\", 2)[1];\r\n\r\n  fetch(`http://localhost:8000/api/woofunlike/${postId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token.access}`,\r\n    },\r\n    body: JSON.stringify({\r\n      text: \".\",\r\n      likes: [],\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(\"Success:\", data);\r\n    })\r\n    .catch((error) => {\r\n      // console.error(\"Error:\", error);\r\n    });\r\n  // window.location.reload(true);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Body,\r\n  Avatar,\r\n  Content,\r\n  Header,\r\n  Dot,\r\n  Text,\r\n  Paginator,\r\n  Icons,\r\n  Status,\r\n  LikeIcon,\r\n  EditIcon,\r\n} from \"./styles\";\r\n\r\n// Import like function from utils folder\r\nimport like from \"../../utils/like\";\r\nimport unlike from \"../../utils/unlike\";\r\n\r\n// Function to handle page number based on type of split URL\r\nfunction handlePreviousPage(previous) {\r\n  let prev = previous.split(\"=\")[1];\r\n  if (typeof prev === \"undefined\") {\r\n    prev = 1;\r\n  }\r\n  return prev;\r\n}\r\n\r\n// Function to handle JWT token\r\nconst parseJWT = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction Woof() {\r\n  let url = window.location.href;\r\n  let username = url.substring(url.lastIndexOf(\"/\") + 1);\r\n\r\n  // Get user information\r\n  if (localStorage.getItem(\"Bearer\")) {\r\n    const user_id = parseJWT(localStorage.getItem(\"Bearer\")).user_id;\r\n    var logged_user = parseJWT(localStorage.getItem(\"Bearer\")).username;\r\n  } else {\r\n    var logged_user = undefined;\r\n    var user_id = undefined;\r\n  }\r\n\r\n  // Necessary for rendering page\r\n  const [random, setRandom] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [previous, setPrevious] = useState([]);\r\n  const [next, setNext] = useState([]);\r\n\r\n  // Create a function to update a text area\r\n  function UpdateTweet(e) {\r\n    const textarea = document.getElementById(\"textarea\");\r\n    // get text that is inside the textarea\r\n    const text = textarea.value;\r\n\r\n    // get the id from the closest svg element depending on parent\r\n    const id = e.target.parentElement.getElementsByTagName(\"svg\")[0].id;\r\n\r\n    // make a PUT fetch request\r\n    fetch(`http://127.0.0.1:8000/api/woofupdate/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"Bearer\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n      }),\r\n    });\r\n    // return a value to run the next function\r\n    setRandom(Math.random());\r\n  }\r\n\r\n  function edit(event) {\r\n    let postId = event.target.id;\r\n\r\n    // Get data from div passed through event\r\n    let post = event.target.parentNode.parentNode;\r\n    // Get paragraph information from post element\r\n    let paragraph = post.querySelector(\"p\");\r\n    if (paragraph) {\r\n      // Get text from paragraph\r\n      let text = paragraph.innerHTML;\r\n      // Transform text paragraph element into textara\r\n      post.querySelector(\r\n        \"p\"\r\n      ).innerHTML = `<textarea id=\"textarea\" rows=\"4\" cols=\"75\" style=\"border:1px solid var(--twitter);border-radius:4px\">${text}</textarea>`;\r\n\r\n      // Select parent div and create a button to edit\r\n      var parent = post.parentNode;\r\n      let button = document.createElement(\"button\");\r\n      button.innerHTML = \"Save\";\r\n      button.classList.add(\"edit\");\r\n      button.id = postId;\r\n      // button.addEventListener(\"click\", edit);\r\n      parent.appendChild(button);\r\n      // style button element\r\n      button.style.backgroundColor = \"var(--twitter)\";\r\n      button.style.color = \"var(--white)\";\r\n      button.style.borderRadius = \"4px\";\r\n      button.style.padding = \"8px 16px\";\r\n      button.style.float = \"center\";\r\n      button.style.cursor = \"pointer\";\r\n      button.style.fontSize = \"14px\";\r\n      button.style.fontWeight = \"bold\";\r\n      button.style.textAlign = \"center\";\r\n      button.style.width = \"10%\";\r\n      button.style.margin = \"0 auto\";\r\n\r\n      // Do an action when button is clicked\r\n      button.addEventListener(\"click\", (event) => {\r\n        button.style.display = \"none\";\r\n        UpdateTweet(event);\r\n      });\r\n    }\r\n    setRandom(Math.random());\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/woof/${username}?page=${page}`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPosts(data.results);\r\n        setPrevious(data.previous ? handlePreviousPage(data.previous) : null);\r\n        setNext(data.next ? data.next.split(\"=\")[1] : null);\r\n      });\r\n  }, [previous, page, random]);\r\n\r\n  // Function to handle Like event\r\n  function handleLike(post) {\r\n    if (post && user_id) {\r\n      if (post.likes.includes(user_id)) {\r\n        unlike(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      } else {\r\n        like(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {posts.map((post) => (\r\n          <div key={post.id}>\r\n            <Container>\r\n              <Body>\r\n                <Avatar />\r\n\r\n                <Content>\r\n                  <Header>\r\n                    <strong>\r\n                      {post.first_name} {post.last_name}\r\n                    </strong>\r\n                    <span>\r\n                      <Link to={`/${post.username}`}>@{post.username}</Link>\r\n                    </span>\r\n                    <Dot />\r\n                    <time>{post.created_at.split(\"T\")[0]}</time>\r\n\r\n                    {/* Show datetime if created_at and updated_at objects are equal */}\r\n                    {post.created_at !== post.updated_at ? (\r\n                      <>\r\n                        <Dot />\r\n                        <time>edited on {post.updated_at.split(\"T\")[0]}</time>\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Header>\r\n                  <Text>{post.text}</Text>\r\n\r\n                  {/* Show <EditIcon /> if username is equal to post.username */}\r\n                  {logged_user === post.username ? (\r\n                    <EditIcon id={post.id} onClick={edit} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Icons>\r\n                    <Status\r\n                      id={post ? post.id : \"0\"}\r\n                      onClick={() => {\r\n                        handleLike(post);\r\n                      }}\r\n                    >\r\n                      <LikeIcon\r\n                        style={{\r\n                          fill:\r\n                            post && post.likes.includes(user_id)\r\n                              ? \"var(--like)\"\r\n                              : \"var(--outline)\",\r\n                        }}\r\n                      />\r\n                      {post && post.likes ? post.likes.length : \" ...\"}\r\n                    </Status>\r\n                  </Icons>\r\n                </Content>\r\n              </Body>\r\n            </Container>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Paginator>\r\n        <button\r\n          style={{ display: previous ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(previous)}\r\n        >\r\n          &laquo; Previous\r\n        </button>\r\n        <button\r\n          style={{ display: next ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(next)}\r\n        >\r\n          Next &raquo;\r\n        </button>\r\n      </Paginator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Woof;\r\n","import React from \"react\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport follow from \"./follow.js\";\r\nimport unfollow from \"./unfollow.js\";\r\n\r\nimport {\r\n  Cont,\r\n  Container,\r\n  Banner,\r\n  Avatar,\r\n  ProfileData,\r\n  Tab,\r\n  Tweets,\r\n  LocationIcon,\r\n  CalendarIcon,\r\n  FollowData,\r\n  EditButton,\r\n} from \"./styles\";\r\n\r\nimport LeftBar from \"../LeftBar\";\r\nimport { Wrapper } from \"../Layout/styles\";\r\n\r\nimport WoofByUser from \"../WoofByUser\";\r\n\r\nconst ProfilePage: React.FC = (request) => {\r\n  // User profile\r\n  let page = window.location.href;\r\n  var username = page.substring(page.lastIndexOf(\"/\") + 1);\r\n\r\n  const [random, setRandom] = useState(0); // Necessary for re-rendering page\r\n  const [user, setUser] = useState([]);\r\n  const [followee, setFollowee] = useState([]);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n  if (localStorage.getItem(\"authTokens\")) {\r\n    var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n\r\n    var follower = jwt_decode(token.access).username;\r\n    var followerId = jwt_decode(token.access).user_id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/user/${username}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data.results[0]);\r\n      });\r\n\r\n    fetch(`http://localhost:8000/api/isfollowing/${username}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setFollowee(data.results[0]);\r\n      });\r\n  }, [random]);\r\n\r\n  function handleFollow() {\r\n    follow();\r\n    // Pause for 0.5 seconds and set a random value to force page to re-render\r\n    setTimeout(setRandom(Math.random()), 0.5);\r\n  }\r\n  function handleUnfollow() {\r\n    unfollow();\r\n    // Pause for 0.5 seconds and set a random value to force page to re-render\r\n    setTimeout(setRandom(Math.random()), 0.5);\r\n  }\r\n\r\n  // console.log(followerId);\r\n  // console.log(followee.followers);\r\n  // console.log(isFollowing);\r\n\r\n  // follower = () => {\r\n  //   document.getElementById(\"username\").innerText.split(\"@\", 2)[1];\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <LeftBar />\r\n        <Cont>\r\n          <Container>\r\n            <Banner>\r\n              <Avatar />\r\n            </Banner>\r\n\r\n            <ProfileData>\r\n              {/* Creates follow button depending if user is already followed */}\r\n              {user.username != follower &&\r\n              followee.followers &&\r\n              followerId &&\r\n              !followee.followers.includes(followerId) ? (\r\n                <EditButton outlined=\"True\" onClick={handleFollow}>\r\n                  Follow\r\n                </EditButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {/* Creates unfollow button depending if user is already followed */}\r\n              {user.username != follower &&\r\n              followee.followers &&\r\n              followerId &&\r\n              followee.followers.includes(followerId) ? (\r\n                <EditButton outlined=\"True\" onClick={handleUnfollow}>\r\n                  Unfollow\r\n                </EditButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {/* {user.username != follower ? (\r\n                <EditButton outlined=\"True\" onClick={follow}>\r\n                  Follow\r\n                </EditButton>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <h1>\r\n                {user ? user.first_name : \"Loading\"}{\" \"}\r\n                {user ? user.last_name : \" ...\"}\r\n              </h1>\r\n\r\n              <h2>@{user ? user.username : \" ...\"}</h2>\r\n\r\n              <p>Bio...</p>\r\n\r\n              <ul>\r\n                <li>\r\n                  <LocationIcon /> ---\r\n                </li>\r\n                <li>\r\n                  <CalendarIcon /> Joined in{\"   \"}\r\n                  {typeof user.date_joined !== \"undefined\"\r\n                    ? user.date_joined.split(\"T\")[0]\r\n                    : \"Loading...\"}\r\n                </li>\r\n              </ul>\r\n            </ProfileData>\r\n\r\n            <FollowData>\r\n              <span>\r\n                <strong>\r\n                  {user && user.following ? user.following.length : \" ...\"}\r\n                </strong>{\" \"}\r\n                Following\r\n              </span>\r\n\r\n              <span>\r\n                <strong>\r\n                  {user && user.following ? user.followers.length : \" ...\"}{\" \"}\r\n                </strong>{\" \"}\r\n                Followers\r\n              </span>\r\n            </FollowData>\r\n          </Container>\r\n          <Tab>Woofs</Tab>\r\n          <Tweets>\r\n            <WoofByUser />\r\n          </Tweets>\r\n        </Cont>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\n\r\nexport default function follow(event) {\r\n  // Token needed for authentication\r\n  var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n\r\n  // Username of who is going to do the follow action\r\n  var username = document.getElementById(\"username\").innerText.split(\"@\", 2)[1];\r\n\r\n  // Username of the followed\r\n  let page = window.location.href;\r\n  let userToFollow = page.substring(page.lastIndexOf(\"/\") + 1);\r\n\r\n  fetch(\"http://localhost:8000/api/follow/\" + username + \"\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token.access}`,\r\n    },\r\n    body: JSON.stringify({\r\n      username: username,\r\n      followee: userToFollow,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(\"Success:\", data);\r\n    })\r\n    .catch((error) => {\r\n      // console.error(\"Error:\", error);\r\n    });\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function unfollow(event) {\r\n  // Token needed for authentication\r\n  var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n\r\n  // Username of who is going to do the follow action\r\n  var username = document.getElementById(\"username\").innerText.split(\"@\", 2)[1];\r\n\r\n  // Username of the followed\r\n  let page = window.location.href;\r\n  let userToUnfollow = page.substring(page.lastIndexOf(\"/\") + 1);\r\n\r\n  fetch(\"http://localhost:8000/api/unfollow/\" + username + \"\", {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token.access}`,\r\n    },\r\n    body: JSON.stringify({\r\n      username: username,\r\n      followee: userToUnfollow,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(\"Success:\", data);\r\n    })\r\n    .catch((error) => {\r\n      // console.error(\"Error:\", error);\r\n    });\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Tab = styled.div`\r\n  margin-top: 10px;\r\n  padding: 11px 0 15px;\r\n\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n\r\n  outline: 0;\r\n  cursor: pointer;\r\n\r\n  color: var(--twitter);\r\n  border-bottom: 1px solid var(--twitter);\r\n\r\n  &: hover {\r\n    background-color: var(--twitter-dark-hover);\r\n  }\r\n`;\r\n\r\nexport const Tweets = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Favorite, EditOutline } from \"../../styles/icons\";\r\n\r\nexport const Tweet = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 14px 16px;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  max-width: 100%;\r\n`;\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n\r\n  position: relative;\r\n`;\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  border-radius: 50px;\r\n  flex-shrink: 0;\r\n  background-color: var(--gray);\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  margin-top: 2px;\r\n  padding-left: 60px;\r\n`;\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 15px;\r\n  // Text won't break\r\n  white-space: nowrap;\r\n\r\n  > strong {\r\n    margin-right: 5px;\r\n  }\r\n  > span,\r\n  time {\r\n    color: var(--gray);\r\n  }\r\n  > span > a {\r\n    text-decoration: none;\r\n    color: var(--gray);\r\n    &:hover {\r\n      color: var(--white);\r\n    }\r\n  }\r\n\r\n  > strong,\r\n  span {\r\n    // Text won't break\r\n    white-space: nowrap;\r\n    // Three dots when pushing text\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  background: var(--gray);\r\n  width: 2px;\r\n  height: 2px;\r\n  border-radius: 50%;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n`;\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  flex-wrap: wrap;\r\n  margin: 10px auto 0;\r\n  width: 100%;\r\n\r\n  > div {\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\nexport const Status = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 14px;\r\n\r\n  > svg {\r\n    margin-right: 4px;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    color: var(--like);\r\n\r\n    > svg {\r\n      fill: var(--like);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Paginator = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  > button {\r\n    color: var(--gray);\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n  }\r\n  > button.active {\r\n    background-color: var(--twitter);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n  }\r\n  > button:hover:not(.active) {\r\n    color: var(--twitter);\r\n    background-color: var(--twitter-dark-hover);\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 18px;\r\n  height: 18px;\r\n`;\r\n\r\nexport const LikeIcon = styled(Favorite)`\r\n  ${iconCSS}\r\n`;\r\n\r\n// Create a link element called \"edit\"\r\n// Element will be placed on top right side\r\nexport const EditCSS = css`\r\n  width: 24px;\r\n  height: 24px;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  &:hover {\r\n    fill: var(--twitter);\r\n    &: (.active) {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EditIcon = styled(EditOutline)`\r\n  ${EditCSS}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Body,\r\n  Avatar,\r\n  Content,\r\n  Header,\r\n  Dot,\r\n  Text,\r\n  Paginator,\r\n  Icons,\r\n  Status,\r\n  LikeIcon,\r\n  EditIcon,\r\n} from \"./styles\";\r\n\r\n// Import like function from utils folder\r\nimport like from \"../../utils/like\";\r\nimport unlike from \"../../utils/unlike\";\r\n\r\n// Import UserInfo function from utils folder\r\nimport UserInfo from \"../../utils/UserInfo\";\r\n\r\n// Function to handle page number based on type of split URL\r\nfunction handlePreviousPage(previous) {\r\n  let prev = previous.split(\"=\")[1];\r\n  if (typeof prev === \"undefined\") {\r\n    prev = 1;\r\n  }\r\n  return prev;\r\n}\r\n\r\n// Function to handle JWT token\r\nconst parseJWT = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction Woof() {\r\n  // Get user information\r\n  if (localStorage.getItem(\"Bearer\")) {\r\n    const user_id = parseJWT(localStorage.getItem(\"Bearer\")).user_id;\r\n  } else {\r\n    var user_id = undefined;\r\n  }\r\n\r\n  // Necessary for rendering page\r\n  const [random, setRandom] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [previous, setPrevious] = useState([]);\r\n  const [next, setNext] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/woof/?page=${page}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: `Bearer ${localStorage.getItem(\"Bearer\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPosts(data.results);\r\n        setPrevious(data.previous ? handlePreviousPage(data.previous) : null);\r\n        setNext(data.next ? data.next.split(\"=\")[1] : null);\r\n      });\r\n  }, [previous, page, random]);\r\n\r\n  // Function to handle Like event\r\n  function handleLike(post) {\r\n    if (post && user_id) {\r\n      if (post.likes.includes(user_id)) {\r\n        unlike(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      } else {\r\n        like(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        {posts.map((post, index) => (\r\n          <div key={index}>\r\n            <Container>\r\n              <Body>\r\n                <Avatar />\r\n\r\n                <Content>\r\n                  <Header>\r\n                    <strong>\r\n                      {post.first_name} {post.last_name}\r\n                    </strong>\r\n                    <span>\r\n                      <Link to={post.username}>@{post.username}</Link>\r\n                    </span>\r\n                    <Dot />\r\n                    <time>{post.created_at.split(\"T\")[0]}</time>\r\n\r\n                    {/* Show datetime if created_at and updated_at objects are equal */}\r\n                    {post.created_at !== post.updated_at ? (\r\n                      <>\r\n                        <Dot />\r\n                        <time>edited on {post.updated_at.split(\"T\")[0]}</time>\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Header>\r\n\r\n                  <Text>{post.text}</Text>\r\n\r\n                  <Icons>\r\n                    <Status\r\n                      id={post ? post.id : \"0\"}\r\n                      onClick={() => {\r\n                        handleLike(post);\r\n                      }}\r\n                    >\r\n                      <LikeIcon\r\n                        style={{\r\n                          fill:\r\n                            post && post.likes.includes(user_id)\r\n                              ? \"var(--like)\"\r\n                              : \"var(--outline)\",\r\n                        }}\r\n                      />\r\n                      {post && post.likes ? post.likes.length : \" ...\"}\r\n                    </Status>\r\n                  </Icons>\r\n                </Content>\r\n              </Body>\r\n            </Container>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Paginator>\r\n        <button\r\n          style={{ display: previous ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(previous)}\r\n        >\r\n          &laquo; Previous\r\n        </button>\r\n        <button\r\n          style={{ display: next ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(next)}\r\n        >\r\n          Next &raquo;\r\n        </button>\r\n      </Paginator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Woof;\r\n","import React from \"react\";\r\n\r\nimport { Container, Tab, Tweets } from \"./styles\";\r\n\r\n// import Tweet from \"../Tweet\";\r\n// import Posts from \"../Posts\";\r\n\r\nimport Woof from \"../Woof\";\r\n\r\nfunction Feed() {\r\n  return (\r\n    <Container>\r\n      <Tab>All Posts</Tab>\r\n      <Tweets>\r\n        {/* <Posts />\r\n        <Tweet>Test</Tweet>\r\n        <Tweet>Test</Tweet>\r\n        <Tweet>Test</Tweet>\r\n        <Tweet>Test</Tweet>\r\n        <Tweet>Test</Tweet> */}\r\n        <Woof />\r\n      </Tweets>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n\r\n// const Feed: React.FC = () => {\r\n//   return (\r\n//     <Container>\r\n//       <Tab>Tweet</Tab>\r\n//       <Tweets>\r\n//         <Tweet>Test</Tweet>\r\n//         <Tweet>Test</Tweet>\r\n//         <Tweet>Test</Tweet>\r\n//         <Tweet>Test</Tweet>\r\n//         <Tweet>Test</Tweet>\r\n//       </Tweets>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Feed;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 14px 16px;\r\n\r\n  border-bottom: 1px solid var(--outline);\r\n  border-top: 1px solid var(--outline);\r\n\r\n  max-width: 100%;\r\n\r\n  > button {\r\n    width: 20%;\r\n\r\n    margin-right: 0px;\r\n    margin-left: auto;\r\n\r\n    margin-top: 15px;\r\n\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  display: flex;\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  min-height: 30px;\r\n  width: 100%;\r\n  margin-top: 2px;\r\n  padding-left: 60px;\r\n`;\r\n\r\nconst TextArea = ({ className }) => (\r\n  <form>\r\n    <textarea\r\n      className={className}\r\n      name=\"text\"\r\n      id=\"text\"\r\n      placeholder=\"What are you thinking?\"\r\n    />\r\n  </form>\r\n);\r\n\r\nexport const Text = styled(TextArea)`\r\n  /* content: \"What are you thinking?\"; */\r\n  width: 100%;\r\n  /* maxlength: 280; */\r\n\r\n  /* min-height: 30px;\r\n  max-height: 150px; */\r\n\r\n  height: 120px;\r\n\r\n  border-bottom: 1px solid var(--outline);\r\n  /* border-top: 1px solid var(--outline); */\r\n  outline: hidden;\r\n  resize: none;\r\n  overflow: hidden;\r\n\r\n  font-size: 20px;\r\n  font-weight: 400px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  border-radius: 50px;\r\n  flex-shrink: 0;\r\n  background-color: var(--gray);\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n","import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nimport { Container, Body, Content, Text, Avatar } from \"./styles\";\r\n\r\nimport { send } from \"./send.js\";\r\n\r\nconst Post: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Body>\r\n          <Content>\r\n            <Avatar />\r\n            <Text />\r\n          </Content>\r\n        </Body>\r\n        <Button outlined=\"False\" onClick={(e) => send(e)}>\r\n          Post\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nexport function send(event) {\r\n  var date = new Date();\r\n  var now_utc = Date.UTC(\r\n    date.getUTCFullYear(),\r\n    date.getUTCMonth(),\r\n    date.getUTCDate(),\r\n    date.getUTCHours(),\r\n    date.getUTCMinutes(),\r\n    date.getUTCSeconds()\r\n  );\r\n\r\n  // Prepare data to be sent on JSON POST request\r\n  var isoDateString = new Date().toISOString();\r\n  var token = JSON.parse(localStorage.getItem(\"authTokens\"));\r\n  var woof = document.getElementById(\"text\").value;\r\n\r\n  fetch(\"http://localhost:8000/api/woof/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"Bearer\")}`,\r\n    },\r\n    body: JSON.stringify({\r\n      text: woof,\r\n      created_at: isoDateString,\r\n      updated_at: isoDateString,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(\"Success:\", data);\r\n    })\r\n    .catch((error) => {\r\n      // console.error(\"Error:\", error);\r\n    });\r\n  window.location.reload(true);\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ArrowLeft } from \"../../styles/icons\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex; //  Main container\r\n  flex-direction: column;\r\n\r\n  width: min(600px, 100%); // Won't get larger than 601px\r\n\r\n  border-left: 1px solid var(--outline);\r\n  border-right: 1px solid var(--outline);\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  z-index: 2; // Stays above everything\r\n  position: sticky; // Stays on the top of screen\r\n  top: 0;\r\n  background: var(--primary);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  text-align: left;\r\n\r\n  padding: 8px 0 8px 12px;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  > button {\r\n    padding: 8px;\r\n    border-radius: 50%;\r\n\r\n    outline: 0;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: var(--twitter-dark-hover);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackIcon = styled(ArrowLeft)`\r\n  width: 16px;\r\n  height: 16px;\r\n\r\n  fill: var (--twitter);\r\n`;\r\n\r\nexport const ProfileInfo = styled.div`\r\n  margin-left: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > strong {\r\n    font-size: 18px;\r\n  }\r\n  > span {\r\n    font-size: 12px;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\nexport const Main = styled.div``;\r\n","import React from \"react\";\r\n\r\nimport ProfilePage from \"../ProfilePage\";\r\n\r\nimport Feed from \"../Feed\";\r\n\r\nimport Post from \"../Post\";\r\n\r\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport { Container, Header, BackIcon, ProfileInfo } from \"./styles\";\r\n\r\n// const Main: React.FC = () => {\r\n//   return (\r\n//     <Container>\r\n//       <Header>\r\n//         <button>\r\n//           <BackIcon />\r\n//         </button>\r\n\r\n//         <ProfileInfo>\r\n//           <strong>Pedro</strong>\r\n//           <span>40 Woofs</span>\r\n//         </ProfileInfo>\r\n//       </Header>\r\n\r\n//       <ProfilePage />\r\n\r\n//       <Feed />\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\nfunction Main() {\r\n  return (\r\n    // Actually related to profile page\r\n    <Container>\r\n      {/*     \r\n      <Header>\r\n        <button>\r\n          <BackIcon />\r\n        </button>\r\n\r\n        <ProfileInfo>\r\n          <strong>Pedro</strong>\r\n          <span>40 Woofs</span>\r\n        </ProfileInfo>\r\n      </Header>\r\n \r\n      <ProfilePage />\r\n  */}\r\n      <Post />\r\n\r\n      <Feed />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\n// import { Container } from './styles';\r\nimport LeftBar from \"../LeftBar\";\r\n\r\nimport Main from \"../Main\";\r\nimport { Container, Wrapper } from \"./styles\";\r\n\r\nconst Layout: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <LeftBar />\r\n\r\n        <Main />\r\n\r\n        {/* <RightBar /> */}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\nimport { ArrowLeft } from \"../../styles/icons\";\r\n\r\nexport const Container1 = styled.div`\r\n  background: var(--primary);\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n\r\n  display: flex; // 1 | 2 | 3 Layout\r\n  justify-content: center; // Everything on center\r\n`;\r\n\r\nexport const Container2 = styled.div`\r\n  display: flex; //  Main container\r\n  flex-direction: column;\r\n\r\n  width: min(600px, 100%); // Won't get larger than 601px\r\n\r\n  border-left: 1px solid var(--outline);\r\n  border-right: 1px solid var(--outline);\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  z-index: 2; // Stays above everything\r\n  position: sticky; // Stays on the top of screen\r\n  top: 0;\r\n  background: var(--primary);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  text-align: left;\r\n\r\n  padding: 8px 0 8px 12px;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  > button {\r\n    padding: 8px;\r\n    border-radius: 50%;\r\n\r\n    outline: 0;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: var(--twitter-dark-hover);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackIcon = styled(ArrowLeft)`\r\n  width: 16px;\r\n  height: 16px;\r\n\r\n  fill: var (--twitter);\r\n`;\r\n\r\nexport const ProfileInfo = styled.div`\r\n  margin-left: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > strong {\r\n    font-size: 18px;\r\n  }\r\n  > span {\r\n    font-size: 12px;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\n// export default Main = styled.div``;\r\n\r\nexport const Container3 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Tab = styled.div`\r\n  margin-top: 10px;\r\n  padding: 11px 0 15px;\r\n\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n\r\n  outline: 0;\r\n  cursor: pointer;\r\n\r\n  color: var(--twitter);\r\n  border-bottom: 1px solid var(--twitter);\r\n\r\n  &: hover {\r\n    background-color: var(--twitter-dark-hover);\r\n  }\r\n`;\r\n\r\nexport const Tweets = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Favorite } from \"../../styles/icons\";\r\n\r\nexport const Tweet = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 14px 16px;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  max-width: 100%;\r\n`;\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n\r\n  position: relative;\r\n`;\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  border-radius: 50px;\r\n  flex-shrink: 0;\r\n  background-color: var(--gray);\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  margin-top: 2px;\r\n  padding-left: 60px;\r\n`;\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 15px;\r\n  // Text won't break\r\n  white-space: nowrap;\r\n\r\n  > strong {\r\n    margin-right: 5px;\r\n  }\r\n  > span,\r\n  time {\r\n    color: var(--gray);\r\n  }\r\n  > span > a {\r\n    text-decoration: none;\r\n    color: var(--gray);\r\n    &:hover {\r\n      color: var(--white);\r\n    }\r\n  }\r\n  > strong,\r\n  span {\r\n    // Text won't break\r\n    white-space: nowrap;\r\n    // Three dots when pushing text\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  background: var(--gray);\r\n  width: 2px;\r\n  height: 2px;\r\n  border-radius: 50%;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n`;\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  flex-wrap: wrap;\r\n  margin: 10px auto 0;\r\n  width: 100%;\r\n\r\n  > div {\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\nexport const Status = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 14px;\r\n\r\n  > svg {\r\n    margin-right: 4px;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    color: var(--like);\r\n\r\n    > svg {\r\n      fill: var(--like);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Paginator = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 1px solid var(--outline);\r\n\r\n  > button {\r\n    color: var(--gray);\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n  }\r\n  > button.active {\r\n    background-color: var(--twitter);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n  }\r\n  > button:hover:not(.active) {\r\n    color: var(--twitter);\r\n    background-color: var(--twitter-dark-hover);\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst iconCSS = css`\r\n  width: 18px;\r\n  height: 18px;\r\n`;\r\n\r\nexport const LikeIcon = styled(Favorite)`\r\n  ${iconCSS}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Body,\r\n  Avatar,\r\n  Content,\r\n  Header,\r\n  Dot,\r\n  Text,\r\n  Paginator,\r\n  Icons,\r\n  Status,\r\n  LikeIcon,\r\n} from \"./styles\";\r\n\r\n// Import like function from utils folder\r\nimport like from \"../../utils/like\";\r\nimport unlike from \"../../utils/unlike\";\r\n\r\n// Function to handle page number based on type of split URL\r\nfunction handlePreviousPage(previous) {\r\n  let prev = previous.split(\"=\")[1];\r\n  if (typeof prev === \"undefined\") {\r\n    prev = 1;\r\n  }\r\n  return prev;\r\n}\r\n\r\n// Function to handle JWT token\r\nconst parseJWT = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction FollowingWoof() {\r\n  // Get user information\r\n  const user_id = parseJWT(localStorage.getItem(\"Bearer\")).user_id;\r\n\r\n  // Necessary for rendering page\r\n  const [random, setRandom] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [previous, setPrevious] = useState([]);\r\n  const [next, setNext] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/following/?page=${page}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"Bearer\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setPosts(data.results);\r\n        setPrevious(data.previous ? handlePreviousPage(data.previous) : null);\r\n        setNext(data.next ? data.next.split(\"=\")[1] : null);\r\n      });\r\n  }, [previous, page, random]);\r\n\r\n  // Function to handle Like event\r\n  function handleLike(post) {\r\n    if (post) {\r\n      if (post.likes.includes(user_id)) {\r\n        unlike(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      } else {\r\n        like(post.id);\r\n        setRandom(Math.random()); // Force re-render\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <Container>\r\n            <Body>\r\n              <Avatar />\r\n\r\n              <Content>\r\n                <Header>\r\n                  <strong>\r\n                    {post.first_name} {post.last_name}\r\n                  </strong>\r\n                  <span>\r\n                    <Link to={`/${post.username}`}>@{post.username}</Link>\r\n                  </span>\r\n                  <Dot />\r\n                  <time>{post.created_at.split(\"T\")[0]}</time>\r\n\r\n                  {/* Show datetime if created_at and updated_at objects are equal */}\r\n                  {post.created_at !== post.updated_at ? (\r\n                    <>\r\n                      <Dot />\r\n                      <time>edited on {post.updated_at.split(\"T\")[0]}</time>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Header>\r\n\r\n                <Text>{post.text}</Text>\r\n\r\n                <Icons>\r\n                  <Status\r\n                    id={post ? post.id : \"0\"}\r\n                    onClick={() => {\r\n                      handleLike(post);\r\n                    }}\r\n                  >\r\n                    <LikeIcon\r\n                      style={{\r\n                        fill:\r\n                          post && post.likes.includes(user_id)\r\n                            ? \"var(--like)\"\r\n                            : \"var(--outline)\",\r\n                      }}\r\n                    />\r\n                    {post && post.likes ? post.likes.length : \" ...\"}\r\n                  </Status>\r\n                </Icons>\r\n              </Content>\r\n            </Body>\r\n          </Container>\r\n        </div>\r\n      ))}\r\n\r\n      <Paginator>\r\n        <button\r\n          style={{ display: previous ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(previous)}\r\n        >\r\n          &laquo; Previous\r\n        </button>\r\n        <button\r\n          style={{ display: next ? \"block\" : \"none\" }}\r\n          onClick={() => setPage(next)}\r\n        >\r\n          Next &raquo;\r\n        </button>\r\n      </Paginator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FollowingWoof;\r\n","import React from \"react\";\r\n\r\n// import { Container } from './styles';\r\nimport LeftBar from \"../LeftBar\";\r\n\r\nimport Main from \"./styles\";\r\nimport { Wrapper } from \"./styles\";\r\n\r\nimport Feed from \"./styles\";\r\n\r\nimport Post from \"../Post\";\r\n\r\nimport FollowingWoof from \"../FollowingWoof\";\r\n\r\nimport { Header, BackIcon, ProfileInfo } from \"./styles\";\r\n\r\nimport { Container1, Container2, Container3 } from \"./styles\";\r\n\r\n// import { Container, Tab, Tweets } from \"./styles\";\r\nimport { Tab, Tweets } from \"./styles\";\r\n\r\nconst FollowingLayout: React.FC = () => {\r\n  return (\r\n    <Container1>\r\n      <Wrapper>\r\n        <LeftBar />\r\n        <Container2>\r\n          <Post />\r\n          <Container3>\r\n            <Tab>Following</Tab>\r\n            <Tweets>\r\n              <FollowingWoof />\r\n            </Tweets>\r\n          </Container3>\r\n        </Container2>\r\n      </Wrapper>\r\n    </Container1>\r\n  );\r\n};\r\n\r\nexport default FollowingLayout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background: var(--primary);\r\n\r\n  display: flex; //  Main container\r\n  flex-direction: column;\r\n\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-radius: 10px;\r\n\r\n  width: min(600px, 100%); // Won't get larger than 601px\r\n\r\n  border: 1px solid var(--gray);\r\n\r\n  span {\r\n    font-size: 20px;\r\n    font-family: apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica,\r\n      Arial, sans-serif;\r\n    font-weight: bold;\r\n    color: var(--twitter);\r\n\r\n    /* Align span on the center of div */\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    /* Align span on the center of div */\r\n    justify-content: center;\r\n\r\n    padding: 5px 0px 12px 0px;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    align-items: center;\r\n\r\n    input {\r\n      height: 50px;\r\n      width: 50%;\r\n      margin: 5px;\r\n\r\n      border-radius: 5px;\r\n      outline: 1px solid var(--gray);\r\n\r\n      padding-left: 15px;\r\n      color: var(--twitter);\r\n\r\n      &:focus {\r\n        outline: 1px solid var(--twitter);\r\n      }\r\n    }\r\n\r\n    button {\r\n      width: 20%;\r\n\r\n      margin: 0 auto;\r\n\r\n      margin-top: 15px;\r\n      margin-bottom: 10px;\r\n      padding: 10px;\r\n\r\n      background-color: var(--white);\r\n      color: var(--primary);\r\n\r\n      &:hover {\r\n        background-color: var(--gray);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n\r\n  display: flex; // 1 | 2 | 3 Layout\r\n  justify-content: center; // Everything on center\r\n`;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Wrapper } from \"./styles\";\r\nimport { Container } from \"./styles\";\r\n\r\nimport Button from \"../Button\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nconst LoginPage = () => {\r\n  let { loginUser } = useContext(AuthContext);\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <div>\r\n          <span>WOOF (WUPHF)</span>\r\n\r\n          <form onSubmit={loginUser}>\r\n            <input type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n            <Button outlined=\"False\">Login</Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","// import { useEffect, useState } from \"react\";\r\n// import './App.css';\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\nimport Layout from \"./components/Layout\";\r\nimport FollowingLayout from \"./components/FollowingLayout\";\r\n\r\nimport React from \"react\";\r\n\r\nimport LoginPage from \"./components/LoginPage\";\r\n\r\nimport ProfilePage from \"./components/ProfilePage\";\r\n\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport { AuthProvider } from \"./contexts/AuthContext\";\r\n\r\nfunction App() {\r\n  // const [woofs, setWoofs] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const loadData = () => {\r\n  //     fetch(\"http://localhost:8000/api/woof/\")\r\n  //       .then((response) => response.json())\r\n  //       .then((data) => setWoofs(data));\r\n  //   };\r\n  //   loadData();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <AuthProvider>\r\n          <Routes>\r\n            <Route element={<LoginPage />} path=\"/login\" />\r\n            <Route\r\n              element={\r\n                // <PrivateRoute>\r\n                <Layout />\r\n                // </PrivateRoute>\r\n              }\r\n              path=\"/\"\r\n            />\r\n            <Route element={<ProfilePage />} path=\"/:profile/\" />\r\n            <Route element={<FollowingLayout />} path=\"/following/\" />\r\n          </Routes>\r\n        </AuthProvider>\r\n        <GlobalStyles />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import './index.css';\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}